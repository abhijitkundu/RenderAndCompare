name: "SEResnet50_roisF_vp96"
# mean_value: 104, 117, 123

layer {
  name: "data_layer"
  type: "Python"
  top: "input_image"
  top: "rois"
  top: "gt_viewpoint"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "FastRCNNDataLayer"
    param_str: "-i 1 -r 32 -sr 600 600 -sm 2500 -f 0.5 -j 0.9 -t input_image roi viewpoint -m 104.0 117.0 123.0"
  }
}

layer {
  name:"viewpoint_quantizer"
  type: "Python"
  bottom: "gt_viewpoint"
  top: "gt_viewpoint_label"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "QuantizeViewPoint"
    param_str: "--num_of_bins 96"
  }
}

#-------------------------------------------------#
#------------------- SE-ResNet-50 ----------------#
#-------------------------------------------------#


layer {
  name: "conv1/7x7_s2"
  type: "Convolution"
  bottom: "input_image"
  top: "conv1/7x7_s2"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 3
    kernel_size: 7
    stride: 2
  }
}
layer {
  name: "conv1/7x7_s2/bn"
  type: "BatchNorm"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv1/7x7_s2/bn/scale"
  type: "Scale"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1/relu_7x7_s2"
  type: "ReLU"
  bottom: "conv1/7x7_s2"
  top: "conv1/7x7_s2"
}
layer {
  name: "pool1/3x3_s2"
  type: "Pooling"
  bottom: "conv1/7x7_s2"
  top: "pool1/3x3_s2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2_1_1x1_reduce"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2_1_1x1_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_1x1_reduce"
}
layer {
  name: "conv2_1_3x3"
  type: "Convolution"
  bottom: "conv2_1_1x1_reduce"
  top: "conv2_1_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv2_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_3x3/relu"
  type: "ReLU"
  bottom: "conv2_1_3x3"
  top: "conv2_1_3x3"
}
layer {
  name: "conv2_1_1x1_increase"
  type: "Convolution"
  bottom: "conv2_1_3x3"
  top: "conv2_1_1x1_increase"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1_global_pool"
  type: "Pooling"
  bottom: "conv2_1_1x1_increase"
  top: "conv2_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_1_1x1_down"
  type: "Convolution"
  bottom: "conv2_1_global_pool"
  top: "conv2_1_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_1_1x1_down"
  top: "conv2_1_1x1_down"
}
layer {
  name: "conv2_1_1x1_up"
  type: "Convolution"
  bottom: "conv2_1_1x1_down"
  top: "conv2_1_1x1_up"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_prob"
  type: "Sigmoid"
  bottom: "conv2_1_1x1_up"
  top: "conv2_1_1x1_up"
}
layer {
  name: "conv2_1_1x1_proj"
  type: "Convolution"
  bottom: "pool1/3x3_s2"
  top: "conv2_1_1x1_proj"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1_1x1_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_1"
  type: "Axpy"
  bottom: "conv2_1_1x1_up"
  bottom: "conv2_1_1x1_increase"
  bottom: "conv2_1_1x1_proj"
  top: "conv2_1"
}
layer {
  name: "conv2_1/relu"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2_1x1_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_1x1_reduce"
}
layer {
  name: "conv2_2_3x3"
  type: "Convolution"
  bottom: "conv2_2_1x1_reduce"
  top: "conv2_2_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv2_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_3x3/relu"
  type: "ReLU"
  bottom: "conv2_2_3x3"
  top: "conv2_2_3x3"
}
layer {
  name: "conv2_2_1x1_increase"
  type: "Convolution"
  bottom: "conv2_2_3x3"
  top: "conv2_2_1x1_increase"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_2_global_pool"
  type: "Pooling"
  bottom: "conv2_2_1x1_increase"
  top: "conv2_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_2_1x1_down"
  type: "Convolution"
  bottom: "conv2_2_global_pool"
  top: "conv2_2_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_2_1x1_down"
  top: "conv2_2_1x1_down"
}
layer {
  name: "conv2_2_1x1_up"
  type: "Convolution"
  bottom: "conv2_2_1x1_down"
  top: "conv2_2_1x1_up"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_2_prob"
  type: "Sigmoid"
  bottom: "conv2_2_1x1_up"
  top: "conv2_2_1x1_up"
}
layer {
  name: "conv2_2"
  type: "Axpy"
  bottom: "conv2_2_1x1_up"
  bottom: "conv2_2_1x1_increase"
  bottom: "conv2_1"
  top: "conv2_2"
}
layer {
  name: "conv2_2/relu"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "conv2_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_2"
  top: "conv2_3_1x1_reduce"
  convolution_param {
    num_output: 64
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_1x1_reduce"
}
layer {
  name: "conv2_3_3x3"
  type: "Convolution"
  bottom: "conv2_3_1x1_reduce"
  top: "conv2_3_3x3"
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv2_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_3x3/relu"
  type: "ReLU"
  bottom: "conv2_3_3x3"
  top: "conv2_3_3x3"
}
layer {
  name: "conv2_3_1x1_increase"
  type: "Convolution"
  bottom: "conv2_3_3x3"
  top: "conv2_3_1x1_increase"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv2_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_3_global_pool"
  type: "Pooling"
  bottom: "conv2_3_1x1_increase"
  top: "conv2_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv2_3_1x1_down"
  type: "Convolution"
  bottom: "conv2_3_global_pool"
  top: "conv2_3_1x1_down"
  convolution_param {
    num_output: 16
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv2_3_1x1_down"
  top: "conv2_3_1x1_down"
}
layer {
  name: "conv2_3_1x1_up"
  type: "Convolution"
  bottom: "conv2_3_1x1_down"
  top: "conv2_3_1x1_up"
  convolution_param {
    num_output: 256
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv2_3_prob"
  type: "Sigmoid"
  bottom: "conv2_3_1x1_up"
  top: "conv2_3_1x1_up"
}
layer {
  name: "conv2_3"
  type: "Axpy"
  bottom: "conv2_3_1x1_up"
  bottom: "conv2_3_1x1_increase"
  bottom: "conv2_2"
  top: "conv2_3"
}
layer {
  name: "conv2_3/relu"
  type: "ReLU"
  bottom: "conv2_3"
  top: "conv2_3"
}
layer {
  name: "conv3_1_1x1_reduce"
  type: "Convolution"
  bottom: "conv2_3"
  top: "conv3_1_1x1_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv3_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_1x1_reduce"
}
layer {
  name: "conv3_1_3x3"
  type: "Convolution"
  bottom: "conv3_1_1x1_reduce"
  top: "conv3_1_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv3_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_3x3/relu"
  type: "ReLU"
  bottom: "conv3_1_3x3"
  top: "conv3_1_3x3"
}
layer {
  name: "conv3_1_1x1_increase"
  type: "Convolution"
  bottom: "conv3_1_3x3"
  top: "conv3_1_1x1_increase"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1_global_pool"
  type: "Pooling"
  bottom: "conv3_1_1x1_increase"
  top: "conv3_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_1_1x1_down"
  type: "Convolution"
  bottom: "conv3_1_global_pool"
  top: "conv3_1_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_1_1x1_down"
  top: "conv3_1_1x1_down"
}
layer {
  name: "conv3_1_1x1_up"
  type: "Convolution"
  bottom: "conv3_1_1x1_down"
  top: "conv3_1_1x1_up"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_1_prob"
  type: "Sigmoid"
  bottom: "conv3_1_1x1_up"
  top: "conv3_1_1x1_up"
}
layer {
  name: "conv3_1_1x1_proj"
  type: "Convolution"
  bottom: "conv2_3"
  top: "conv3_1_1x1_proj"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv3_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1_1x1_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_1"
  type: "Axpy"
  bottom: "conv3_1_1x1_up"
  bottom: "conv3_1_1x1_increase"
  bottom: "conv3_1_1x1_proj"
  top: "conv3_1"
}
layer {
  name: "conv3_1/relu"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2_1x1_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_1x1_reduce"
}
layer {
  name: "conv3_2_3x3"
  type: "Convolution"
  bottom: "conv3_2_1x1_reduce"
  top: "conv3_2_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv3_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_3x3/relu"
  type: "ReLU"
  bottom: "conv3_2_3x3"
  top: "conv3_2_3x3"
}
layer {
  name: "conv3_2_1x1_increase"
  type: "Convolution"
  bottom: "conv3_2_3x3"
  top: "conv3_2_1x1_increase"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_2_global_pool"
  type: "Pooling"
  bottom: "conv3_2_1x1_increase"
  top: "conv3_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_2_1x1_down"
  type: "Convolution"
  bottom: "conv3_2_global_pool"
  top: "conv3_2_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_2_1x1_down"
  top: "conv3_2_1x1_down"
}
layer {
  name: "conv3_2_1x1_up"
  type: "Convolution"
  bottom: "conv3_2_1x1_down"
  top: "conv3_2_1x1_up"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_2_prob"
  type: "Sigmoid"
  bottom: "conv3_2_1x1_up"
  top: "conv3_2_1x1_up"
}
layer {
  name: "conv3_2"
  type: "Axpy"
  bottom: "conv3_2_1x1_up"
  bottom: "conv3_2_1x1_increase"
  bottom: "conv3_1"
  top: "conv3_2"
}
layer {
  name: "conv3_2/relu"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3_1x1_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_1x1_reduce"
}
layer {
  name: "conv3_3_3x3"
  type: "Convolution"
  bottom: "conv3_3_1x1_reduce"
  top: "conv3_3_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv3_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_3x3/relu"
  type: "ReLU"
  bottom: "conv3_3_3x3"
  top: "conv3_3_3x3"
}
layer {
  name: "conv3_3_1x1_increase"
  type: "Convolution"
  bottom: "conv3_3_3x3"
  top: "conv3_3_1x1_increase"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_3_global_pool"
  type: "Pooling"
  bottom: "conv3_3_1x1_increase"
  top: "conv3_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_3_1x1_down"
  type: "Convolution"
  bottom: "conv3_3_global_pool"
  top: "conv3_3_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_3_1x1_down"
  top: "conv3_3_1x1_down"
}
layer {
  name: "conv3_3_1x1_up"
  type: "Convolution"
  bottom: "conv3_3_1x1_down"
  top: "conv3_3_1x1_up"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_3_prob"
  type: "Sigmoid"
  bottom: "conv3_3_1x1_up"
  top: "conv3_3_1x1_up"
}
layer {
  name: "conv3_3"
  type: "Axpy"
  bottom: "conv3_3_1x1_up"
  bottom: "conv3_3_1x1_increase"
  bottom: "conv3_2"
  top: "conv3_3"
}
layer {
  name: "conv3_3/relu"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "conv3_4_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_3"
  top: "conv3_4_1x1_reduce"
  convolution_param {
    num_output: 128
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_4_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_1x1_reduce"
}
layer {
  name: "conv3_4_3x3"
  type: "Convolution"
  bottom: "conv3_4_1x1_reduce"
  top: "conv3_4_3x3"
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv3_4_3x3/bn"
  type: "BatchNorm"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_4_3x3/bn/scale"
  type: "Scale"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_3x3/relu"
  type: "ReLU"
  bottom: "conv3_4_3x3"
  top: "conv3_4_3x3"
}
layer {
  name: "conv3_4_1x1_increase"
  type: "Convolution"
  bottom: "conv3_4_3x3"
  top: "conv3_4_1x1_increase"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv3_4_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_4_global_pool"
  type: "Pooling"
  bottom: "conv3_4_1x1_increase"
  top: "conv3_4_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv3_4_1x1_down"
  type: "Convolution"
  bottom: "conv3_4_global_pool"
  top: "conv3_4_1x1_down"
  convolution_param {
    num_output: 32
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_1x1_down/relu"
  type: "ReLU"
  bottom: "conv3_4_1x1_down"
  top: "conv3_4_1x1_down"
}
layer {
  name: "conv3_4_1x1_up"
  type: "Convolution"
  bottom: "conv3_4_1x1_down"
  top: "conv3_4_1x1_up"
  convolution_param {
    num_output: 512
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv3_4_prob"
  type: "Sigmoid"
  bottom: "conv3_4_1x1_up"
  top: "conv3_4_1x1_up"
}
layer {
  name: "conv3_4"
  type: "Axpy"
  bottom: "conv3_4_1x1_up"
  bottom: "conv3_4_1x1_increase"
  bottom: "conv3_3"
  top: "conv3_4"
}
layer {
  name: "conv3_4/relu"
  type: "ReLU"
  bottom: "conv3_4"
  top: "conv3_4"
}
layer {
  name: "conv4_1_1x1_reduce"
  type: "Convolution"
  bottom: "conv3_4"
  top: "conv4_1_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv4_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_1x1_reduce"
}
layer {
  name: "conv4_1_3x3"
  type: "Convolution"
  bottom: "conv4_1_1x1_reduce"
  top: "conv4_1_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_3x3/relu"
  type: "ReLU"
  bottom: "conv4_1_3x3"
  top: "conv4_1_3x3"
}
layer {
  name: "conv4_1_1x1_increase"
  type: "Convolution"
  bottom: "conv4_1_3x3"
  top: "conv4_1_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1_global_pool"
  type: "Pooling"
  bottom: "conv4_1_1x1_increase"
  top: "conv4_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_1_1x1_down"
  type: "Convolution"
  bottom: "conv4_1_global_pool"
  top: "conv4_1_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_1_1x1_down"
  top: "conv4_1_1x1_down"
}
layer {
  name: "conv4_1_1x1_up"
  type: "Convolution"
  bottom: "conv4_1_1x1_down"
  top: "conv4_1_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_1_prob"
  type: "Sigmoid"
  bottom: "conv4_1_1x1_up"
  top: "conv4_1_1x1_up"
}
layer {
  name: "conv4_1_1x1_proj"
  type: "Convolution"
  bottom: "conv3_4"
  top: "conv4_1_1x1_proj"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv4_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1_1x1_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_1"
  type: "Axpy"
  bottom: "conv4_1_1x1_up"
  bottom: "conv4_1_1x1_increase"
  bottom: "conv4_1_1x1_proj"
  top: "conv4_1"
}
layer {
  name: "conv4_1/relu"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_1x1_reduce"
}
layer {
  name: "conv4_2_3x3"
  type: "Convolution"
  bottom: "conv4_2_1x1_reduce"
  top: "conv4_2_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_3x3/relu"
  type: "ReLU"
  bottom: "conv4_2_3x3"
  top: "conv4_2_3x3"
}
layer {
  name: "conv4_2_1x1_increase"
  type: "Convolution"
  bottom: "conv4_2_3x3"
  top: "conv4_2_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_2_global_pool"
  type: "Pooling"
  bottom: "conv4_2_1x1_increase"
  top: "conv4_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_2_1x1_down"
  type: "Convolution"
  bottom: "conv4_2_global_pool"
  top: "conv4_2_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_2_1x1_down"
  top: "conv4_2_1x1_down"
}
layer {
  name: "conv4_2_1x1_up"
  type: "Convolution"
  bottom: "conv4_2_1x1_down"
  top: "conv4_2_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_2_prob"
  type: "Sigmoid"
  bottom: "conv4_2_1x1_up"
  top: "conv4_2_1x1_up"
}
layer {
  name: "conv4_2"
  type: "Axpy"
  bottom: "conv4_2_1x1_up"
  bottom: "conv4_2_1x1_increase"
  bottom: "conv4_1"
  top: "conv4_2"
}
layer {
  name: "conv4_2/relu"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_3_1x1_reduce"
  top: "conv4_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_3_1x1_reduce"
  top: "conv4_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_3_1x1_reduce"
  top: "conv4_3_1x1_reduce"
}
layer {
  name: "conv4_3_3x3"
  type: "Convolution"
  bottom: "conv4_3_1x1_reduce"
  top: "conv4_3_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_3_3x3"
  top: "conv4_3_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_3_3x3"
  top: "conv4_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_3_3x3/relu"
  type: "ReLU"
  bottom: "conv4_3_3x3"
  top: "conv4_3_3x3"
}
layer {
  name: "conv4_3_1x1_increase"
  type: "Convolution"
  bottom: "conv4_3_3x3"
  top: "conv4_3_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_3_1x1_increase"
  top: "conv4_3_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_3_1x1_increase"
  top: "conv4_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_3_global_pool"
  type: "Pooling"
  bottom: "conv4_3_1x1_increase"
  top: "conv4_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_3_1x1_down"
  type: "Convolution"
  bottom: "conv4_3_global_pool"
  top: "conv4_3_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_3_1x1_down"
  top: "conv4_3_1x1_down"
}
layer {
  name: "conv4_3_1x1_up"
  type: "Convolution"
  bottom: "conv4_3_1x1_down"
  top: "conv4_3_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_3_prob"
  type: "Sigmoid"
  bottom: "conv4_3_1x1_up"
  top: "conv4_3_1x1_up"
}
layer {
  name: "conv4_3"
  type: "Axpy"
  bottom: "conv4_3_1x1_up"
  bottom: "conv4_3_1x1_increase"
  bottom: "conv4_2"
  top: "conv4_3"
}
layer {
  name: "conv4_3/relu"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "conv4_4_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_3"
  top: "conv4_4_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_4_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_4_1x1_reduce"
  top: "conv4_4_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_4_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_4_1x1_reduce"
  top: "conv4_4_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_4_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_4_1x1_reduce"
  top: "conv4_4_1x1_reduce"
}
layer {
  name: "conv4_4_3x3"
  type: "Convolution"
  bottom: "conv4_4_1x1_reduce"
  top: "conv4_4_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_4_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_4_3x3"
  top: "conv4_4_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_4_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_4_3x3"
  top: "conv4_4_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_4_3x3/relu"
  type: "ReLU"
  bottom: "conv4_4_3x3"
  top: "conv4_4_3x3"
}
layer {
  name: "conv4_4_1x1_increase"
  type: "Convolution"
  bottom: "conv4_4_3x3"
  top: "conv4_4_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_4_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_4_1x1_increase"
  top: "conv4_4_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_4_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_4_1x1_increase"
  top: "conv4_4_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_4_global_pool"
  type: "Pooling"
  bottom: "conv4_4_1x1_increase"
  top: "conv4_4_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_4_1x1_down"
  type: "Convolution"
  bottom: "conv4_4_global_pool"
  top: "conv4_4_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_4_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_4_1x1_down"
  top: "conv4_4_1x1_down"
}
layer {
  name: "conv4_4_1x1_up"
  type: "Convolution"
  bottom: "conv4_4_1x1_down"
  top: "conv4_4_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_4_prob"
  type: "Sigmoid"
  bottom: "conv4_4_1x1_up"
  top: "conv4_4_1x1_up"
}
layer {
  name: "conv4_4"
  type: "Axpy"
  bottom: "conv4_4_1x1_up"
  bottom: "conv4_4_1x1_increase"
  bottom: "conv4_3"
  top: "conv4_4"
}
layer {
  name: "conv4_4/relu"
  type: "ReLU"
  bottom: "conv4_4"
  top: "conv4_4"
}
layer {
  name: "conv4_5_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_4"
  top: "conv4_5_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_5_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_5_1x1_reduce"
  top: "conv4_5_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_5_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_5_1x1_reduce"
  top: "conv4_5_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_5_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_5_1x1_reduce"
  top: "conv4_5_1x1_reduce"
}
layer {
  name: "conv4_5_3x3"
  type: "Convolution"
  bottom: "conv4_5_1x1_reduce"
  top: "conv4_5_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_5_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_5_3x3"
  top: "conv4_5_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_5_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_5_3x3"
  top: "conv4_5_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_5_3x3/relu"
  type: "ReLU"
  bottom: "conv4_5_3x3"
  top: "conv4_5_3x3"
}
layer {
  name: "conv4_5_1x1_increase"
  type: "Convolution"
  bottom: "conv4_5_3x3"
  top: "conv4_5_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_5_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_5_1x1_increase"
  top: "conv4_5_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_5_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_5_1x1_increase"
  top: "conv4_5_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_5_global_pool"
  type: "Pooling"
  bottom: "conv4_5_1x1_increase"
  top: "conv4_5_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_5_1x1_down"
  type: "Convolution"
  bottom: "conv4_5_global_pool"
  top: "conv4_5_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_5_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_5_1x1_down"
  top: "conv4_5_1x1_down"
}
layer {
  name: "conv4_5_1x1_up"
  type: "Convolution"
  bottom: "conv4_5_1x1_down"
  top: "conv4_5_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_5_prob"
  type: "Sigmoid"
  bottom: "conv4_5_1x1_up"
  top: "conv4_5_1x1_up"
}
layer {
  name: "conv4_5"
  type: "Axpy"
  bottom: "conv4_5_1x1_up"
  bottom: "conv4_5_1x1_increase"
  bottom: "conv4_4"
  top: "conv4_5"
}
layer {
  name: "conv4_5/relu"
  type: "ReLU"
  bottom: "conv4_5"
  top: "conv4_5"
}
layer {
  name: "conv4_6_1x1_reduce"
  type: "Convolution"
  bottom: "conv4_5"
  top: "conv4_6_1x1_reduce"
  convolution_param {
    num_output: 256
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_6_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv4_6_1x1_reduce"
  top: "conv4_6_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_6_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv4_6_1x1_reduce"
  top: "conv4_6_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_6_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv4_6_1x1_reduce"
  top: "conv4_6_1x1_reduce"
}
layer {
  name: "conv4_6_3x3"
  type: "Convolution"
  bottom: "conv4_6_1x1_reduce"
  top: "conv4_6_3x3"
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv4_6_3x3/bn"
  type: "BatchNorm"
  bottom: "conv4_6_3x3"
  top: "conv4_6_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_6_3x3/bn/scale"
  type: "Scale"
  bottom: "conv4_6_3x3"
  top: "conv4_6_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_6_3x3/relu"
  type: "ReLU"
  bottom: "conv4_6_3x3"
  top: "conv4_6_3x3"
}
layer {
  name: "conv4_6_1x1_increase"
  type: "Convolution"
  bottom: "conv4_6_3x3"
  top: "conv4_6_1x1_increase"
  convolution_param {
    num_output: 1024
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_6_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv4_6_1x1_increase"
  top: "conv4_6_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv4_6_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv4_6_1x1_increase"
  top: "conv4_6_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv4_6_global_pool"
  type: "Pooling"
  bottom: "conv4_6_1x1_increase"
  top: "conv4_6_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv4_6_1x1_down"
  type: "Convolution"
  bottom: "conv4_6_global_pool"
  top: "conv4_6_1x1_down"
  convolution_param {
    num_output: 64
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_6_1x1_down/relu"
  type: "ReLU"
  bottom: "conv4_6_1x1_down"
  top: "conv4_6_1x1_down"
}
layer {
  name: "conv4_6_1x1_up"
  type: "Convolution"
  bottom: "conv4_6_1x1_down"
  top: "conv4_6_1x1_up"
  convolution_param {
    num_output: 1024
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv4_6_prob"
  type: "Sigmoid"
  bottom: "conv4_6_1x1_up"
  top: "conv4_6_1x1_up"
}
layer {
  name: "conv4_6"
  type: "Axpy"
  bottom: "conv4_6_1x1_up"
  bottom: "conv4_6_1x1_increase"
  bottom: "conv4_5"
  top: "conv4_6"
}
layer {
  name: "conv4_6/relu"
  type: "ReLU"
  bottom: "conv4_6"
  top: "conv4_6"
}

#-------------------------------------------------#
#------------------ ROI Pooling ------------------#
#-------------------------------------------------#

layer {
  name: "roi_pool"
  type: "ROIPooling"
  bottom: "conv4_6"
  bottom: "rois"
  top: "roi_pool"
  roi_pooling_param {
    pooled_w: 14
    pooled_h: 14
    spatial_scale: 0.0625 # 1/16
  }
}

#-------------------------------------------------#
#---------------------- NoC ----------------------#
#-------------------------------------------------#

layer {
  name: "conv5_1_1x1_reduce"
  type: "Convolution"
  bottom: "roi_pool"
  top: "conv5_1_1x1_reduce"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv5_1_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv5_1_1x1_reduce"
  top: "conv5_1_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_1_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv5_1_1x1_reduce"
  top: "conv5_1_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv5_1_1x1_reduce"
  top: "conv5_1_1x1_reduce"
}
layer {
  name: "conv5_1_3x3"
  type: "Convolution"
  bottom: "conv5_1_1x1_reduce"
  top: "conv5_1_3x3"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv5_1_3x3/bn"
  type: "BatchNorm"
  bottom: "conv5_1_3x3"
  top: "conv5_1_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_1_3x3/bn/scale"
  type: "Scale"
  bottom: "conv5_1_3x3"
  top: "conv5_1_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1_3x3/relu"
  type: "ReLU"
  bottom: "conv5_1_3x3"
  top: "conv5_1_3x3"
}
layer {
  name: "conv5_1_1x1_increase"
  type: "Convolution"
  bottom: "conv5_1_3x3"
  top: "conv5_1_1x1_increase"
  convolution_param {
    num_output: 2048
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_1_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv5_1_1x1_increase"
  top: "conv5_1_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_1_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv5_1_1x1_increase"
  top: "conv5_1_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1_global_pool"
  type: "Pooling"
  bottom: "conv5_1_1x1_increase"
  top: "conv5_1_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv5_1_1x1_down"
  type: "Convolution"
  bottom: "conv5_1_global_pool"
  top: "conv5_1_1x1_down"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_1_1x1_down/relu"
  type: "ReLU"
  bottom: "conv5_1_1x1_down"
  top: "conv5_1_1x1_down"
}
layer {
  name: "conv5_1_1x1_up"
  type: "Convolution"
  bottom: "conv5_1_1x1_down"
  top: "conv5_1_1x1_up"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_1_prob"
  type: "Sigmoid"
  bottom: "conv5_1_1x1_up"
  top: "conv5_1_1x1_up"
}
layer {
  name: "conv5_1_1x1_proj"
  type: "Convolution"
  bottom: "roi_pool"
  top: "conv5_1_1x1_proj"
  convolution_param {
    num_output: 2048
    bias_term: false
    kernel_size: 1
    stride: 2
  }
}
layer {
  name: "conv5_1_1x1_proj/bn"
  type: "BatchNorm"
  bottom: "conv5_1_1x1_proj"
  top: "conv5_1_1x1_proj"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_1_1x1_proj/bn/scale"
  type: "Scale"
  bottom: "conv5_1_1x1_proj"
  top: "conv5_1_1x1_proj"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_1"
  type: "Axpy"
  bottom: "conv5_1_1x1_up"
  bottom: "conv5_1_1x1_increase"
  bottom: "conv5_1_1x1_proj"
  top: "conv5_1"
}
layer {
  name: "conv5_1/relu"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2_1x1_reduce"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2_1x1_reduce"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_2_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv5_2_1x1_reduce"
  top: "conv5_2_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_2_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv5_2_1x1_reduce"
  top: "conv5_2_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_2_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv5_2_1x1_reduce"
  top: "conv5_2_1x1_reduce"
}
layer {
  name: "conv5_2_3x3"
  type: "Convolution"
  bottom: "conv5_2_1x1_reduce"
  top: "conv5_2_3x3"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv5_2_3x3/bn"
  type: "BatchNorm"
  bottom: "conv5_2_3x3"
  top: "conv5_2_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_2_3x3/bn/scale"
  type: "Scale"
  bottom: "conv5_2_3x3"
  top: "conv5_2_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_2_3x3/relu"
  type: "ReLU"
  bottom: "conv5_2_3x3"
  top: "conv5_2_3x3"
}
layer {
  name: "conv5_2_1x1_increase"
  type: "Convolution"
  bottom: "conv5_2_3x3"
  top: "conv5_2_1x1_increase"
  convolution_param {
    num_output: 2048
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_2_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv5_2_1x1_increase"
  top: "conv5_2_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_2_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv5_2_1x1_increase"
  top: "conv5_2_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_2_global_pool"
  type: "Pooling"
  bottom: "conv5_2_1x1_increase"
  top: "conv5_2_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv5_2_1x1_down"
  type: "Convolution"
  bottom: "conv5_2_global_pool"
  top: "conv5_2_1x1_down"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_2_1x1_down/relu"
  type: "ReLU"
  bottom: "conv5_2_1x1_down"
  top: "conv5_2_1x1_down"
}
layer {
  name: "conv5_2_1x1_up"
  type: "Convolution"
  bottom: "conv5_2_1x1_down"
  top: "conv5_2_1x1_up"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_2_prob"
  type: "Sigmoid"
  bottom: "conv5_2_1x1_up"
  top: "conv5_2_1x1_up"
}
layer {
  name: "conv5_2"
  type: "Axpy"
  bottom: "conv5_2_1x1_up"
  bottom: "conv5_2_1x1_increase"
  bottom: "conv5_1"
  top: "conv5_2"
}
layer {
  name: "conv5_2/relu"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3_1x1_reduce"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3_1x1_reduce"
  convolution_param {
    num_output: 512
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_3_1x1_reduce/bn"
  type: "BatchNorm"
  bottom: "conv5_3_1x1_reduce"
  top: "conv5_3_1x1_reduce"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_3_1x1_reduce/bn/scale"
  type: "Scale"
  bottom: "conv5_3_1x1_reduce"
  top: "conv5_3_1x1_reduce"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_3_1x1_reduce/relu"
  type: "ReLU"
  bottom: "conv5_3_1x1_reduce"
  top: "conv5_3_1x1_reduce"
}
layer {
  name: "conv5_3_3x3"
  type: "Convolution"
  bottom: "conv5_3_1x1_reduce"
  top: "conv5_3_3x3"
  convolution_param {
    num_output: 512
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
  }
}
layer {
  name: "conv5_3_3x3/bn"
  type: "BatchNorm"
  bottom: "conv5_3_3x3"
  top: "conv5_3_3x3"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_3_3x3/bn/scale"
  type: "Scale"
  bottom: "conv5_3_3x3"
  top: "conv5_3_3x3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_3_3x3/relu"
  type: "ReLU"
  bottom: "conv5_3_3x3"
  top: "conv5_3_3x3"
}
layer {
  name: "conv5_3_1x1_increase"
  type: "Convolution"
  bottom: "conv5_3_3x3"
  top: "conv5_3_1x1_increase"
  convolution_param {
    num_output: 2048
    bias_term: false
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_3_1x1_increase/bn"
  type: "BatchNorm"
  bottom: "conv5_3_1x1_increase"
  top: "conv5_3_1x1_increase"
  batch_norm_param {
    use_global_stats: true
  }
}
layer {
  name: "conv5_3_1x1_increase/bn/scale"
  type: "Scale"
  bottom: "conv5_3_1x1_increase"
  top: "conv5_3_1x1_increase"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv5_3_global_pool"
  type: "Pooling"
  bottom: "conv5_3_1x1_increase"
  top: "conv5_3_global_pool"
  pooling_param {
    pool: AVE
    engine: CAFFE
    global_pooling: true
  }
}
layer {
  name: "conv5_3_1x1_down"
  type: "Convolution"
  bottom: "conv5_3_global_pool"
  top: "conv5_3_1x1_down"
  convolution_param {
    num_output: 128
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_3_1x1_down/relu"
  type: "ReLU"
  bottom: "conv5_3_1x1_down"
  top: "conv5_3_1x1_down"
}
layer {
  name: "conv5_3_1x1_up"
  type: "Convolution"
  bottom: "conv5_3_1x1_down"
  top: "conv5_3_1x1_up"
  convolution_param {
    num_output: 2048
    kernel_size: 1
    stride: 1
  }
}
layer {
  name: "conv5_3_prob"
  type: "Sigmoid"
  bottom: "conv5_3_1x1_up"
  top: "conv5_3_1x1_up"
}
layer {
  name: "conv5_3"
  type: "Axpy"
  bottom: "conv5_3_1x1_up"
  bottom: "conv5_3_1x1_increase"
  bottom: "conv5_2"
  top: "conv5_3"
}
layer {
  name: "conv5_3/relu"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "pool5/7x7_s1"
  type: "Pooling"
  bottom: "conv5_3"
  top: "pool5/7x7_s1"
  pooling_param {
    pool: AVE
    kernel_size: 7
    stride: 1
  }
}

#-------------------------------------------------#
#-------------- FC Viewpoint Layers --------------#
#-------------------------------------------------#

layer {
  name: "fc_viewpoint_288"
  type: "InnerProduct"
  bottom: "pool5/7x7_s1"
  top: "fc_viewpoint_288"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 288 # 288 = 3 x 96
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "reshape_fc_viewpoint"
  type: "Reshape"
  bottom: "fc_viewpoint_288"
  top: "fc_viewpoint_3x96"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 3
      dim: -1 # infer it from the other dimensions
    }
  }
}

#-------------------------------------------------#
#----------- Discrete Viewpoint Loss -------------#
#-------------------------------------------------#

layer {
  name: "loss_viewpoint_label"
  type: "SoftmaxWithLoss"
  bottom: "fc_viewpoint_3x96"
  bottom: "gt_viewpoint_label"
  top: "loss_viewpoint_label"
  softmax_param {
    axis: 2
  }
  loss_weight: 1
}

#-------------------------------------------------#
#-------------- Continious Viewpoint -------------#
#-------------------------------------------------#

layer {
  name:"argmax_fc_viewpoint_3x96"
  type: "ArgMax"
  bottom: "fc_viewpoint_3x96"
  top: "pred_viewpoint_label"
  argmax_param {
    axis: 2
  }
}

layer {
  name: "dequantize_pred_viewpoint_label"
  type: "Python"
  bottom: "pred_viewpoint_label"
  top: "pred_viewpoint"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "DeQuantizeViewPoint"
    param_str: "-b 96"
  }
}

#-------------------------------------------------#
#------------------ Accuracy Layers --------------#
#-------------------------------------------------#

layer {
  name: "accuracy_viewpoint_label"
  type: "Accuracy"
  bottom: "fc_viewpoint_3x96"
  bottom: "gt_viewpoint_label"
  top: "accuracy_viewpoint_label"
  accuracy_param {
    axis: 2
  }
}

layer {
  name: "error_angular_deg"
  type: "Python"
  bottom: "pred_viewpoint"
  bottom: "gt_viewpoint"
  top: "error_angular_deg"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "AverageAngularError"
    param_str: "--degrees_out"
  }
}

layer {
  name: "slicer_error_angular"
  type: "Slice"
  bottom: "error_angular_deg"
  top: "error_azimuth_deg"
  top: "error_elevation_deg"
  top: "error_tilt_deg"
  slice_param {
    axis: 1
    slice_point: 1
    slice_point: 2
  }
}