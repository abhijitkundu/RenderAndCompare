name: "vgg16RP_vp96"

layer {
  name: "data_layer"
  type: "Python"
  top: "input_image"
  top: "rois"
  top: "gt_viewpoint"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "FastRCNNDataLayer"
    param_str: "-i 1 -r 64 -sr 600 650 -sm 2500 -f 0.5 -j 0.95 -t input_image roi viewpoint -m 103.939 116.779 123.68"
  }
}

layer {
  name:"viewpoint_quantizer"
  type: "Python"
  bottom: "gt_viewpoint"
  top: "gt_viewpoint_label"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "QuantizeViewPoint"
    param_str: "--num_of_bins 96"
  }
}

layer {
  name: "slice_gt_viewpoint_label"
  type: "Slice"
  bottom: "gt_viewpoint_label"
  top: "gt_azimuth_label"
  top: "gt_elevation_label"
  top: "gt_tilt_label"
  slice_param {
    axis: 1
    slice_point: 1
    slice_point: 2
  }
}

#------------- VGG --------------#

layer {
  name: "conv1_1"
  type: "Convolution"
  bottom: "input_image"
  top: "conv1_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_1"
  type: "ReLU"
  bottom: "conv1_1"
  top: "conv1_1"
}
layer {
  name: "conv1_2"
  type: "Convolution"
  bottom: "conv1_1"
  top: "conv1_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu1_2"
  type: "ReLU"
  bottom: "conv1_2"
  top: "conv1_2"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1_2"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv2_1"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2_1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_1"
  type: "ReLU"
  bottom: "conv2_1"
  top: "conv2_1"
}
layer {
  name: "conv2_2"
  type: "Convolution"
  bottom: "conv2_1"
  top: "conv2_2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu2_2"
  type: "ReLU"
  bottom: "conv2_2"
  top: "conv2_2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2_2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv3_1"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_1"
  type: "ReLU"
  bottom: "conv3_1"
  top: "conv3_1"
}
layer {
  name: "conv3_2"
  type: "Convolution"
  bottom: "conv3_1"
  top: "conv3_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_2"
  type: "ReLU"
  bottom: "conv3_2"
  top: "conv3_2"
}
layer {
  name: "conv3_3"
  type: "Convolution"
  bottom: "conv3_2"
  top: "conv3_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu3_3"
  type: "ReLU"
  bottom: "conv3_3"
  top: "conv3_3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3_3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv4_1"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_1"
  type: "ReLU"
  bottom: "conv4_1"
  top: "conv4_1"
}
layer {
  name: "conv4_2"
  type: "Convolution"
  bottom: "conv4_1"
  top: "conv4_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_2"
  type: "ReLU"
  bottom: "conv4_2"
  top: "conv4_2"
}
layer {
  name: "conv4_3"
  type: "Convolution"
  bottom: "conv4_2"
  top: "conv4_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu4_3"
  type: "ReLU"
  bottom: "conv4_3"
  top: "conv4_3"
}
layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4_3"
  top: "pool4"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv5_1"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5_1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_1"
  type: "ReLU"
  bottom: "conv5_1"
  top: "conv5_1"
}
layer {
  name: "conv5_2"
  type: "Convolution"
  bottom: "conv5_1"
  top: "conv5_2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_2"
  type: "ReLU"
  bottom: "conv5_2"
  top: "conv5_2"
}
layer {
  name: "conv5_3"
  type: "Convolution"
  bottom: "conv5_2"
  top: "conv5_3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  name: "relu5_3"
  type: "ReLU"
  bottom: "conv5_3"
  top: "conv5_3"
}
layer {
  name: "roi_pool5"
  type: "ROIPooling"
  bottom: "conv5_3"
  bottom: "rois"
  top: "pool5"
  roi_pooling_param {
    pooled_w: 7
    pooled_h: 7
    spatial_scale: 0.0625 # 1/16
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 4096
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#-------------------------------------------------#
#-------------- FC Viewpoint Layers --------------#
#-------------------------------------------------#

layer {
  name: "fc_viewpoint_288"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc_viewpoint_288"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 288 # 288 = 3 x 96
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "reshape_fc_viewpoint"
  type: "Reshape"
  bottom: "fc_viewpoint_288"
  top: "fc_viewpoint_3x96"
  reshape_param {
    shape {
      dim: 0  # copy the dimension from below
      dim: 3
      dim: -1 # infer it from the other dimensions
    }
  }
}

#-------------------------------------------------#
#----------- Discrete Viewpoint Loss -------------#
#-------------------------------------------------#

layer {
  name: "loss_viewpoint_label"
  type: "SoftmaxWithLoss"
  bottom: "fc_viewpoint_3x96"
  bottom: "gt_viewpoint_label"
  top: "loss_viewpoint_label"
  softmax_param {
    axis: 2
  }
  loss_weight: 1
}

#-------------------------------------------------#
#-------------- Continious Viewpoint -------------#
#-------------------------------------------------#

layer {
  name:"argmax_fc_viewpoint_3x96"
  type: "ArgMax"
  bottom: "fc_viewpoint_3x96"
  top: "pred_viewpoint_label"
  argmax_param {
    axis: 2
  }
}

layer {
  name: "dequantize_pred_viewpoint_label"
  type: "Python"
  bottom: "pred_viewpoint_label"
  top: "pred_viewpoint"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "DeQuantizeViewPoint"
    param_str: "-b 96"
  }
}

#-------------------------------------------------#
#------------------ Accuracy Layers --------------#
#-------------------------------------------------#

layer {
  name: "accuracy_viewpoint_label"
  type: "Accuracy"
  bottom: "fc_viewpoint_3x96"
  bottom: "gt_viewpoint_label"
  top: "accuracy_viewpoint_label"
  accuracy_param {
    axis: 2
  }
}

layer {
  name: "slice_fc_viewpoint_3x96"
  type: "Slice"
  bottom: "fc_viewpoint_3x96"
  top: "fc_azimuth_96"
  top: "fc_elevation_96"
  top: "fc_tilt_96"
  slice_param {
    axis: 1
    slice_point: 1
    slice_point: 2
  }
}

layer {
  name: "accuracy_azimuth_label"
  type: "Accuracy"
  bottom: "fc_azimuth_96"
  bottom: "gt_azimuth_label"
  top: "accuracy_azimuth_label"
  accuracy_param {
    axis: 2
  }
}

layer {
  name: "accuracy_elevation_label"
  type: "Accuracy"
  bottom: "fc_elevation_96"
  bottom: "gt_elevation_label"
  top: "accuracy_elevation_label"
  accuracy_param {
    axis: 2
  }
}

layer {
  name: "accuracy_tilt_label"
  type: "Accuracy"
  bottom: "fc_tilt_96"
  bottom: "gt_tilt_label"
  top: "accuracy_tilt_label"
  accuracy_param {
    axis: 2
  }
}

layer {
  name: "error_angular_deg"
  type: "Python"
  bottom: "pred_viewpoint"
  bottom: "gt_viewpoint"
  top: "error_angular_deg"
  python_param {
    module: "RenderAndCompare.layers"
    layer: "AverageAngularError"
    param_str: "--degrees_out"
  }
}

layer {
  name: "slicer_error_angular"
  type: "Slice"
  bottom: "error_angular_deg"
  top: "error_azimuth_deg"
  top: "error_elevation_deg"
  top: "error_tilt_deg"
  slice_param {
    axis: 1
    slice_point: 1
    slice_point: 2
  }
}